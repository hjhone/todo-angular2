{"ast":null,"code":"import { autorun, reaction, makeAutoObservable, action as action$1, computed as computed$1, observable as observable$1 } from 'mobx';\nimport * as i0 from '@angular/core';\nimport { Directive, Input, Injectable, NgModule } from '@angular/core';\nimport * as i1 from '@angular/router';\nimport { NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators'; // import { mobxAngularDebug } from '../utils/mobx-angular-debug';\n\nclass MobxAutorunDirective {\n  constructor(templateRef, viewContainer) {\n    Object.defineProperty(this, \"templateRef\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: templateRef\n    });\n    Object.defineProperty(this, \"viewContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: viewContainer\n    });\n    Object.defineProperty(this, \"templateBindings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"dispose\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"view\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"allAutorunOptions\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: ['delay', 'scheduler', 'requiresObservable', 'name', 'onError']\n    });\n    Object.defineProperty(this, \"mobxAutorun\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n\n  ngOnInit() {\n    this.view = this.viewContainer.createEmbeddedView(this.templateRef);\n\n    if (this.dispose) {\n      this.dispose();\n    }\n\n    if (this.shouldDetach()) {\n      this.view.detach();\n    }\n\n    this.autoDetect(this.view); // mobxAngularDebug(this.view, this.dispose);\n  }\n\n  shouldDetach() {\n    return this.mobxAutorun && this.mobxAutorun.detach;\n  }\n\n  autoDetect(view) {\n    const opts = this.getAutorunOptions();\n    this.dispose = autorun(() => view.detectChanges(), opts);\n  }\n\n  getAutorunOptions() {\n    return Object.keys(this.mobxAutorun || {}).reduce((opts, current) => {\n      if (this.allAutorunOptions.includes(current)) {\n        opts[current] = this.mobxAutorun[current];\n      }\n\n      return opts;\n    }, {});\n  }\n\n  ngOnDestroy() {\n    if (this.dispose) {\n      this.dispose();\n    }\n  }\n\n}\n\nObject.defineProperty(MobxAutorunDirective, \"\\u0275fac\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: function MobxAutorunDirective_Factory(t) {\n    return new (t || MobxAutorunDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  }\n});\nObject.defineProperty(MobxAutorunDirective, \"\\u0275dir\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MobxAutorunDirective,\n    selectors: [[\"\", \"mobxAutorun\", \"\"]],\n    inputs: {\n      mobxAutorun: \"mobxAutorun\"\n    }\n  })\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MobxAutorunDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mobxAutorun]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }, {\n      type: i0.ViewContainerRef\n    }];\n  }, {\n    mobxAutorun: [{\n      type: Input\n    }]\n  });\n})();\n\nclass MobxReactionDirective extends MobxAutorunDirective {\n  constructor(templateRef, viewContainer) {\n    super(templateRef, viewContainer);\n    Object.defineProperty(this, \"templateRef\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: templateRef\n    });\n    Object.defineProperty(this, \"viewContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: viewContainer\n    });\n    Object.defineProperty(this, \"mobxReaction\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"mobxReactionOptions\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n\n  autoDetect(view) {\n    const opts = Object.assign({\n      fireImmediately: true\n    }, this.mobxReactionOptions);\n    this.dispose = reaction(this.mobxReaction, () => {\n      view.detectChanges();\n    }, opts);\n  }\n\n}\n\nObject.defineProperty(MobxReactionDirective, \"\\u0275fac\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: function MobxReactionDirective_Factory(t) {\n    return new (t || MobxReactionDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  }\n});\nObject.defineProperty(MobxReactionDirective, \"\\u0275dir\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MobxReactionDirective,\n    selectors: [[\"\", \"mobxReaction\", \"\"]],\n    inputs: {\n      mobxReaction: \"mobxReaction\",\n      mobxReactionOptions: \"mobxReactionOptions\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  })\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MobxReactionDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mobxReaction]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }, {\n      type: i0.ViewContainerRef\n    }];\n  }, {\n    mobxReaction: [{\n      type: Input\n    }],\n    mobxReactionOptions: [{\n      type: Input\n    }]\n  });\n})();\n\nclass RouterStore {\n  constructor(router, activatedRoute) {\n    Object.defineProperty(this, \"router\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: router\n    });\n    Object.defineProperty(this, \"activatedRoute\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: activatedRoute\n    });\n    Object.defineProperty(this, \"url\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: ''\n    });\n    Object.defineProperty(this, \"routeSnapshot\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: null\n    });\n    makeAutoObservable(this);\n    router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(e => this.routeListener(e));\n  }\n\n  routeListener(event) {\n    this.routeSnapshot = this.activatedRoute.snapshot;\n    this.url = event.urlAfterRedirects;\n  }\n\n}\n\nObject.defineProperty(RouterStore, \"\\u0275fac\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: function RouterStore_Factory(t) {\n    return new (t || RouterStore)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i1.ActivatedRoute));\n  }\n});\nObject.defineProperty(RouterStore, \"\\u0275prov\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: RouterStore,\n    factory: RouterStore.ɵfac,\n    providedIn: 'root'\n  })\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RouterStore, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.Router\n    }, {\n      type: i1.ActivatedRoute\n    }];\n  }, null);\n})();\n\nconst DIRECTIVES = [MobxAutorunDirective, MobxReactionDirective];\n\nclass MobxAngularModule {}\n\nObject.defineProperty(MobxAngularModule, \"\\u0275fac\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: function MobxAngularModule_Factory(t) {\n    return new (t || MobxAngularModule)();\n  }\n});\nObject.defineProperty(MobxAngularModule, \"\\u0275mod\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MobxAngularModule\n  })\n});\nObject.defineProperty(MobxAngularModule, \"\\u0275inj\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: /* @__PURE__ */i0.ɵɵdefineInjector({})\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MobxAngularModule, [{\n    type: NgModule,\n    args: [{\n      declarations: DIRECTIVES,\n      exports: DIRECTIVES\n    }]\n  }], null, null);\n})();\n/*\r\n * Public API Surface of mobx-angular\r\n */\n// Re-export mobx operators to be able to use inside components with AOT:\n\n\nfunction actionInternal(...args) {\n  return action$1(...args);\n}\n\nconst action = Object.assign(actionInternal, action$1);\n\nfunction computedInternal(...args) {\n  return computed$1(...args);\n}\n\nconst computed = Object.assign(computedInternal, computed$1);\n\nfunction observableInternal(...args) {\n  return observable$1(...args);\n}\n\nconst observable = Object.assign(observableInternal, observable$1);\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { MobxAngularModule, MobxAutorunDirective, MobxReactionDirective, RouterStore, action, actionInternal, computed, observable };","map":{"version":3,"sources":["/Users/hansjoerg/Documents/Github/todo-angular2/node_modules/mobx-angular/fesm2015/mobx-angular.mjs"],"names":["autorun","reaction","makeAutoObservable","action","action$1","computed","computed$1","observable","observable$1","i0","Directive","Input","Injectable","NgModule","i1","NavigationEnd","filter","MobxAutorunDirective","constructor","templateRef","viewContainer","Object","defineProperty","enumerable","configurable","writable","value","ngOnInit","view","createEmbeddedView","dispose","shouldDetach","detach","autoDetect","mobxAutorun","opts","getAutorunOptions","detectChanges","keys","reduce","current","allAutorunOptions","includes","ngOnDestroy","TemplateRef","ViewContainerRef","type","args","selector","MobxReactionDirective","assign","fireImmediately","mobxReactionOptions","mobxReaction","RouterStore","router","activatedRoute","events","pipe","event","subscribe","e","routeListener","routeSnapshot","snapshot","url","urlAfterRedirects","Router","ActivatedRoute","providedIn","DIRECTIVES","MobxAngularModule","declarations","exports","actionInternal","computedInternal","observableInternal"],"mappings":"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","sourcesContent":["import { autorun, reaction, makeAutoObservable, action as action$1, computed as computed$1, observable as observable$1 } from 'mobx';\nimport * as i0 from '@angular/core';\nimport { Directive, Input, Injectable, NgModule } from '@angular/core';\nimport * as i1 from '@angular/router';\nimport { NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n// import { mobxAngularDebug } from '../utils/mobx-angular-debug';\r\nclass MobxAutorunDirective {\r\n    constructor(templateRef, viewContainer) {\r\n        Object.defineProperty(this, \"templateRef\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: templateRef\r\n        });\r\n        Object.defineProperty(this, \"viewContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: viewContainer\r\n        });\r\n        Object.defineProperty(this, \"templateBindings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"dispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"allAutorunOptions\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                'delay',\r\n                'scheduler',\r\n                'requiresObservable',\r\n                'name',\r\n                'onError'\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"mobxAutorun\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.view = this.viewContainer.createEmbeddedView(this.templateRef);\r\n        if (this.dispose) {\r\n            this.dispose();\r\n        }\r\n        if (this.shouldDetach()) {\r\n            this.view.detach();\r\n        }\r\n        this.autoDetect(this.view);\r\n        // mobxAngularDebug(this.view, this.dispose);\r\n    }\r\n    shouldDetach() {\r\n        return this.mobxAutorun && this.mobxAutorun.detach;\r\n    }\r\n    autoDetect(view) {\r\n        const opts = this.getAutorunOptions();\r\n        this.dispose = autorun(() => view.detectChanges(), opts);\r\n    }\r\n    getAutorunOptions() {\r\n        return Object.keys(this.mobxAutorun || {}).reduce((opts, current) => {\r\n            if (this.allAutorunOptions.includes(current)) {\r\n                opts[current] = this.mobxAutorun[current];\r\n            }\r\n            return opts;\r\n        }, {});\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.dispose) {\r\n            this.dispose();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(MobxAutorunDirective, \"\\u0275fac\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: MobxAutorunDirective, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive })\r\n});\r\nObject.defineProperty(MobxAutorunDirective, \"\\u0275dir\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: MobxAutorunDirective, selector: \"[mobxAutorun]\", inputs: { mobxAutorun: \"mobxAutorun\" }, ngImport: i0 })\r\n});\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: MobxAutorunDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{ selector: '[mobxAutorun]' }]\r\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; }, propDecorators: { mobxAutorun: [{\r\n                type: Input\r\n            }] } });\n\nclass MobxReactionDirective extends MobxAutorunDirective {\r\n    constructor(templateRef, viewContainer) {\r\n        super(templateRef, viewContainer);\r\n        Object.defineProperty(this, \"templateRef\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: templateRef\r\n        });\r\n        Object.defineProperty(this, \"viewContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: viewContainer\r\n        });\r\n        Object.defineProperty(this, \"mobxReaction\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"mobxReactionOptions\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    autoDetect(view) {\r\n        const opts = Object.assign({ fireImmediately: true }, this.mobxReactionOptions);\r\n        this.dispose = reaction(this.mobxReaction, () => {\r\n            view.detectChanges();\r\n        }, opts);\r\n    }\r\n}\r\nObject.defineProperty(MobxReactionDirective, \"\\u0275fac\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: MobxReactionDirective, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive })\r\n});\r\nObject.defineProperty(MobxReactionDirective, \"\\u0275dir\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: MobxReactionDirective, selector: \"[mobxReaction]\", inputs: { mobxReaction: \"mobxReaction\", mobxReactionOptions: \"mobxReactionOptions\" }, usesInheritance: true, ngImport: i0 })\r\n});\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: MobxReactionDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{ selector: '[mobxReaction]' }]\r\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; }, propDecorators: { mobxReaction: [{\r\n                type: Input\r\n            }], mobxReactionOptions: [{\r\n                type: Input\r\n            }] } });\n\nclass RouterStore {\r\n    constructor(router, activatedRoute) {\r\n        Object.defineProperty(this, \"router\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: router\r\n        });\r\n        Object.defineProperty(this, \"activatedRoute\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: activatedRoute\r\n        });\r\n        Object.defineProperty(this, \"url\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: ''\r\n        });\r\n        Object.defineProperty(this, \"routeSnapshot\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        makeAutoObservable(this);\r\n        router.events\r\n            .pipe(filter((event) => event instanceof NavigationEnd))\r\n            .subscribe((e) => this.routeListener(e));\r\n    }\r\n    routeListener(event) {\r\n        this.routeSnapshot = this.activatedRoute.snapshot;\r\n        this.url = event.urlAfterRedirects;\r\n    }\r\n}\r\nObject.defineProperty(RouterStore, \"\\u0275fac\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RouterStore, deps: [{ token: i1.Router }, { token: i1.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Injectable })\r\n});\r\nObject.defineProperty(RouterStore, \"\\u0275prov\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RouterStore, providedIn: 'root' })\r\n});\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RouterStore, decorators: [{\r\n            type: Injectable,\r\n            args: [{ providedIn: 'root' }]\r\n        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i1.ActivatedRoute }]; } });\n\nconst DIRECTIVES = [MobxAutorunDirective, MobxReactionDirective];\r\nclass MobxAngularModule {\r\n}\r\nObject.defineProperty(MobxAngularModule, \"\\u0275fac\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: MobxAngularModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule })\r\n});\r\nObject.defineProperty(MobxAngularModule, \"\\u0275mod\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: MobxAngularModule, declarations: [MobxAutorunDirective, MobxReactionDirective], exports: [MobxAutorunDirective, MobxReactionDirective] })\r\n});\r\nObject.defineProperty(MobxAngularModule, \"\\u0275inj\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: MobxAngularModule })\r\n});\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: MobxAngularModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: DIRECTIVES,\r\n                    exports: DIRECTIVES\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of mobx-angular\r\n */\r\n// Re-export mobx operators to be able to use inside components with AOT:\r\nfunction actionInternal(...args) {\r\n    return action$1(...args);\r\n}\r\nconst action = Object.assign(actionInternal, action$1);\r\nfunction computedInternal(...args) {\r\n    return computed$1(...args);\r\n}\r\nconst computed = Object.assign(computedInternal, computed$1);\r\nfunction observableInternal(...args) {\r\n    return observable$1(...args);\r\n}\r\nconst observable = Object.assign(observableInternal, observable$1);\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { MobxAngularModule, MobxAutorunDirective, MobxReactionDirective, RouterStore, action, actionInternal, computed, observable };\n"]},"metadata":{},"sourceType":"module"}
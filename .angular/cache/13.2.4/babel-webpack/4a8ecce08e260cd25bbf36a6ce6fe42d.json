{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { action, makeObservable, observable } from \"mobx\"; //import { ListsStore } from 'src/app/stores/lists.store';\n\nimport { Task } from 'src/app/shared/models/task';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../stores/tasks.store\";\nimport * as i2 from \"../header/header.component\";\nimport * as i3 from \"mobx-angular\";\nimport * as i4 from \"@angular/common\";\n\nfunction TasksComponent_ng_container_2_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1, \"There is no task\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TasksComponent_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TasksComponent_ng_container_2_ng_container_1_div_1_Template, 2, 0, \"div\", 2);\n    i0.ɵɵelementStart(2, \"div\", 3)(3, \"input\", 4);\n    i0.ɵɵlistener(\"input\", function TasksComponent_ng_container_2_ng_container_1_Template_input_input_3_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return ctx_r3.handleNewTaskTitleInput($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function TasksComponent_ng_container_2_ng_container_1_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.handleNewTask();\n    });\n    i0.ɵɵtext(5, \"Add\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"span\", 6)(7, \"strong\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \" 99 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.taskStore.items == null ? null : ctx_r1.taskStore.items.length) === 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", ctx_r1.newTaskTitle);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 3, ctx_r1.taskStore.items));\n  }\n}\n\nfunction TasksComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TasksComponent_ng_container_2_ng_container_1_Template, 11, 5, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", 1);\n  }\n}\n\nconst _c0 = function () {\n  return {\n    name: \"autorun tasks\"\n  };\n};\n\nexport class TasksComponent {\n  // @ViewChild('taskfield') taskfield!: ElementRef;\n\n  /*\n  @computed get activeList(): List | undefined {\n    return this.listsStore.activeList;\n  }\n     @computed get isListSelected(): boolean {\n    return this.activeList !== undefined;\n  }\n  constructor(private listsStore: ListsStore) {\n   */\n  constructor(taskStore) {\n    Object.defineProperty(this, \"taskStore\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: taskStore\n    });\n    Object.defineProperty(this, \"newTaskTitle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: ''\n    });\n    makeObservable(this); // don't forget add this if a class has an observable field\n  }\n\n  setNewTaskTitle(value) {\n    this.newTaskTitle = value;\n  }\n\n  handleNewTaskTitleInput({\n    target\n  }) {\n    this.setNewTaskTitle(target.value);\n  }\n\n  handleNewTask() {\n    let taskTitle = this.newTaskTitle; //this.taskfield.nativeElement.value;\n\n    console.log(this.newTaskTitle);\n    if (taskTitle.trim().length === 0) return;\n    let newTask = new Task(taskTitle);\n    this.taskStore.addTask(newTask);\n    this.setNewTaskTitle('');\n    console.log(newTask);\n    console.log('Add task : ' + newTask); // this.taskfield.nativeElement.value = '';\n    //alert('Task '+this.taskfield.nativeElement.value);\n  }\n\n  removeTask(taskId) {//  this.taskStore.delete(taskId);\n  }\n\n}\nObject.defineProperty(TasksComponent, \"\\u0275fac\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: function TasksComponent_Factory(t) {\n    return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.TasksStore));\n  }\n});\nObject.defineProperty(TasksComponent, \"\\u0275cmp\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TasksComponent,\n    selectors: [[\"app-tasks\"]],\n    hostBindings: function TasksComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown.enter\", function TasksComponent_keydown_enter_HostBindingHandler($event) {\n          return ctx.handleNewTask($event);\n        });\n      }\n    },\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"mobxAutorun\"], [4, \"ngIf\"], [\"class\", \"empty-list\", 4, \"ngIf\"], [1, \"header\"], [\"type\", \"text\", \"placeholder\", \"Enter new task\", 3, \"value\", \"input\"], [3, \"click\"], [1, \"todo-count\"], [1, \"empty-list\"]],\n    template: function TasksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0, \"\\nNew \");\n        i0.ɵɵelement(1, \"app-header\");\n        i0.ɵɵtemplate(2, TasksComponent_ng_container_2_Template, 2, 1, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mobxAutorun\", i0.ɵɵpureFunction0(1, _c0));\n      }\n    },\n    directives: [i2.HeaderComponent, i3.MobxAutorunDirective, i4.NgIf],\n    pipes: [i4.AsyncPipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YXNrcy5jb21wb25lbnQuc2NzcyJ9 */\"]\n  })\n});\n\n__decorate([observable], TasksComponent.prototype, \"newTaskTitle\", void 0);\n\n__decorate([action], TasksComponent.prototype, \"setNewTaskTitle\", null);\n\n__decorate([action], TasksComponent.prototype, \"handleNewTask\", null);","map":{"version":3,"sources":["/Users/hansjoerg/Documents/Github/todo-angular2/src/app/views/tasks/tasks/tasks.component.ts"],"names":["__decorate","action","makeObservable","observable","Task","i0","i1","i2","i3","i4","TasksComponent_ng_container_2_ng_container_1_div_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","TasksComponent_ng_container_2_ng_container_1_Template","_r4","ɵɵgetCurrentView","ɵɵelementContainerStart","ɵɵtemplate","ɵɵlistener","TasksComponent_ng_container_2_ng_container_1_Template_input_input_3_listener","$event","ɵɵrestoreView","ctx_r3","ɵɵnextContext","handleNewTaskTitleInput","TasksComponent_ng_container_2_ng_container_1_Template_button_click_4_listener","ctx_r5","handleNewTask","ɵɵpipe","ɵɵelementContainerEnd","ctx_r1","ɵɵadvance","ɵɵproperty","taskStore","items","length","newTaskTitle","ɵɵtextInterpolate","ɵɵpipeBind1","TasksComponent_ng_container_2_Template","_c0","name","TasksComponent","constructor","Object","defineProperty","enumerable","configurable","writable","value","setNewTaskTitle","target","taskTitle","console","log","trim","newTask","addTask","removeTask","taskId","TasksComponent_Factory","t","ɵɵdirectiveInject","TasksStore","ɵɵdefineComponent","type","selectors","hostBindings","TasksComponent_HostBindings","TasksComponent_keydown_enter_HostBindingHandler","decls","vars","consts","template","TasksComponent_Template","ɵɵelement","ɵɵpureFunction0","directives","HeaderComponent","MobxAutorunDirective","NgIf","pipes","AsyncPipe","styles","prototype"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { action, makeObservable, observable } from \"mobx\";\n//import { ListsStore } from 'src/app/stores/lists.store';\nimport { Task } from 'src/app/shared/models/task';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../stores/tasks.store\";\nimport * as i2 from \"../header/header.component\";\nimport * as i3 from \"mobx-angular\";\nimport * as i4 from \"@angular/common\";\nfunction TasksComponent_ng_container_2_ng_container_1_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1, \"There is no task\");\n    i0.ɵɵelementEnd();\n} }\nfunction TasksComponent_ng_container_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TasksComponent_ng_container_2_ng_container_1_div_1_Template, 2, 0, \"div\", 2);\n    i0.ɵɵelementStart(2, \"div\", 3)(3, \"input\", 4);\n    i0.ɵɵlistener(\"input\", function TasksComponent_ng_container_2_ng_container_1_Template_input_input_3_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(2); return ctx_r3.handleNewTaskTitleInput($event); });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function TasksComponent_ng_container_2_ng_container_1_Template_button_click_4_listener() { i0.ɵɵrestoreView(_r4); const ctx_r5 = i0.ɵɵnextContext(2); return ctx_r5.handleNewTask(); });\n    i0.ɵɵtext(5, \"Add\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"span\", 6)(7, \"strong\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \" 99 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.taskStore.items == null ? null : ctx_r1.taskStore.items.length) === 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", ctx_r1.newTaskTitle);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 3, ctx_r1.taskStore.items));\n} }\nfunction TasksComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TasksComponent_ng_container_2_ng_container_1_Template, 11, 5, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", 1);\n} }\nconst _c0 = function () { return { name: \"autorun tasks\" }; };\nexport class TasksComponent {\n    // @ViewChild('taskfield') taskfield!: ElementRef;\n    /*\n    @computed get activeList(): List | undefined {\n      return this.listsStore.activeList;\n    }\n  \n    @computed get isListSelected(): boolean {\n      return this.activeList !== undefined;\n    }\n   constructor(private listsStore: ListsStore) {\n     */\n    constructor(taskStore) {\n        Object.defineProperty(this, \"taskStore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: taskStore\n        });\n        Object.defineProperty(this, \"newTaskTitle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: ''\n        });\n        makeObservable(this); // don't forget add this if a class has an observable field\n    }\n    setNewTaskTitle(value) {\n        this.newTaskTitle = value;\n    }\n    handleNewTaskTitleInput({ target }) {\n        this.setNewTaskTitle(target.value);\n    }\n    handleNewTask() {\n        let taskTitle = this.newTaskTitle;\n        //this.taskfield.nativeElement.value;\n        console.log(this.newTaskTitle);\n        if (taskTitle.trim().length === 0)\n            return;\n        let newTask = new Task(taskTitle);\n        this.taskStore.addTask(newTask);\n        this.setNewTaskTitle('');\n        console.log(newTask);\n        console.log('Add task : ' + newTask);\n        // this.taskfield.nativeElement.value = '';\n        //alert('Task '+this.taskfield.nativeElement.value);\n    }\n    removeTask(taskId) {\n        //  this.taskStore.delete(taskId);\n    }\n}\nObject.defineProperty(TasksComponent, \"\\u0275fac\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: function TasksComponent_Factory(t) { return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.TasksStore)); }\n});\nObject.defineProperty(TasksComponent, \"\\u0275cmp\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TasksComponent, selectors: [[\"app-tasks\"]], hostBindings: function TasksComponent_HostBindings(rf, ctx) { if (rf & 1) {\n            i0.ɵɵlistener(\"keydown.enter\", function TasksComponent_keydown_enter_HostBindingHandler($event) { return ctx.handleNewTask($event); });\n        } }, decls: 3, vars: 2, consts: [[4, \"mobxAutorun\"], [4, \"ngIf\"], [\"class\", \"empty-list\", 4, \"ngIf\"], [1, \"header\"], [\"type\", \"text\", \"placeholder\", \"Enter new task\", 3, \"value\", \"input\"], [3, \"click\"], [1, \"todo-count\"], [1, \"empty-list\"]], template: function TasksComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵtext(0, \"\\nNew \");\n            i0.ɵɵelement(1, \"app-header\");\n            i0.ɵɵtemplate(2, TasksComponent_ng_container_2_Template, 2, 1, \"ng-container\", 0);\n        } if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"mobxAutorun\", i0.ɵɵpureFunction0(1, _c0));\n        } }, directives: [i2.HeaderComponent, i3.MobxAutorunDirective, i4.NgIf], pipes: [i4.AsyncPipe], styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YXNrcy5jb21wb25lbnQuc2NzcyJ9 */\"] })\n});\n__decorate([\n    observable\n], TasksComponent.prototype, \"newTaskTitle\", void 0);\n__decorate([\n    action\n], TasksComponent.prototype, \"setNewTaskTitle\", null);\n__decorate([\n    action\n], TasksComponent.prototype, \"handleNewTask\", null);\n"]},"metadata":{},"sourceType":"module"}